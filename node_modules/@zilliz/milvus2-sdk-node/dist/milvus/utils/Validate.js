"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkCollectionFields = void 0;
var ErrorReason_1 = require("../const/ErrorReason");
var Common_1 = require("../types/Common");
/**
 * when create collection, field must contain 2 Fields.
 * Type is int64 and primary_key = true
 * Type is one of float_vector and binary_vector
 * Will check fields
 * @param fields
 */
var checkCollectionFields = function (fields) {
    var vectorTypes = [Common_1.DataType.BinaryVector, Common_1.DataType.FloatVector];
    var primaryTypes = [
        Common_1.DataType.Int16,
        Common_1.DataType.Int32,
        Common_1.DataType.Int8,
        Common_1.DataType.Int64,
    ];
    if (!fields.find(function (v) {
        return v.data_type && primaryTypes.includes(v.data_type) && v.is_primary_key;
    })) {
        throw new Error(ErrorReason_1.ERROR_REASONS.CREATE_COLLECTION_CHECK_PRIMARY_KEY);
    }
    if (!fields.find(function (v) {
        return v.data_type ? vectorTypes.includes(v.data_type) : false;
    })) {
        throw new Error(ErrorReason_1.ERROR_REASONS.CREATE_COLLECTION_CHECK_VECTOR_FIELD_EXIST);
    }
    fields.forEach(function (v) {
        if (v.data_type && vectorTypes.includes(v.data_type)) {
            var dim = v.type_params ? v.type_params.dim : undefined;
            if (!dim) {
                throw new Error(ErrorReason_1.ERROR_REASONS.CREATE_COLLECTION_CHECK_MISS_DIM);
            }
            if (v.data_type === Common_1.DataType.BinaryVector && Number(dim) % 8 > 0) {
                throw new Error(ErrorReason_1.ERROR_REASONS.CREATE_COLLECTION_CHECK_BINARY_DIM);
            }
        }
    });
    return true;
};
exports.checkCollectionFields = checkCollectionFields;
//# sourceMappingURL=Validate.js.map