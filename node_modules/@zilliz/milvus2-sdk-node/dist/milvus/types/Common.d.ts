export declare enum MetricType {
    GHOST = 0,
    L2 = 1,
    IP = 2,
    HAMMING = 3,
    JACCARD = 4,
    TANIMOTO = 5,
    SUBSTRUCTURE = 6,
    SUPERSTRUCTURE = 7
}
export declare enum IndexType {
    INVALID = 0,
    FLAT = 1,
    IVFFLAT = 2,
    IVFSQ8 = 3,
    RNSG = 4,
    IVFSQ8H = 5,
    IVFPQ = 6,
    SPTAGKDT = 7,
    SPTAGBKT = 8,
    HNSW = 11,
    ANNOY = 12
}
export declare enum MsgType {
    Undefined = 0,
    CreateCollection = 100,
    DropCollection = 101,
    HasCollection = 102,
    DescribeCollection = 103,
    ShowCollections = 104,
    GetSystemConfigs = 105,
    LoadCollection = 106,
    ReleaseCollection = 107,
    CreatePartition = 200,
    DropPartition = 201,
    HasPartition = 202,
    DescribePartition = 203,
    ShowPartitions = 204,
    LoadPartitions = 205,
    ReleasePartitions = 206,
    ShowSegments = 250,
    DescribeSegment = 251,
    CreateIndex = 300,
    DescribeIndex = 301,
    DropIndex = 302,
    Insert = 400,
    Delete = 401,
    Flush = 402,
    Search = 500,
    SearchResult = 501,
    GetIndexState = 502,
    GetIndexBuildProgress = 503,
    GetCollectionStatistics = 504,
    GetPartitionStatistics = 505,
    Retrieve = 506,
    RetrieveResult = 507,
    SegmentInfo = 600,
    TimeTick = 1200,
    QueryNodeStats = 1201,
    LoadIndex = 1202,
    RequestID = 1203,
    RequestTSO = 1204,
    AllocateSegment = 1205,
    SegmentStatistics = 1206,
    SegmentFlushDone = 1207
}
export interface MsgBase {
    base: {
        msg_type: MsgType;
    };
}
/**
 * @brief Field data type
 */
export declare enum DataType {
    None = 0,
    Bool = 1,
    Int8 = 2,
    Int16 = 3,
    Int32 = 4,
    Int64 = 5,
    Float = 10,
    Double = 11,
    String = 20,
    BinaryVector = 100,
    FloatVector = 101
}
export declare const DataTypeMap: {
    [x: string]: number;
};
export interface KeyValuePair {
    key: string;
    value: string;
}
export declare enum IndexState {
    IndexStateNone = 0,
    Unissued = 1,
    InProgress = 2,
    Finished = 3,
    Failed = 4
}
export declare enum DslType {
    Dsl = 0,
    BoolExprV1 = 1
}
interface NumberArray {
    data: Number[];
}
interface StringArray {
    data: String[];
}
export interface NumberArrayId {
    int_id: NumberArray;
}
export interface StringArrayId {
    str_id: StringArray;
}
export declare enum SegmentState {
    SegmentStateNone = 0,
    NotExist = 1,
    Growing = 2,
    Sealed = 3,
    Flushed = "Flushed",
    Flushing = "Flushing"
}
export declare enum CompactionState {
    UndefiedState = 0,
    Executing = 1,
    Completed = 2
}
export {};
