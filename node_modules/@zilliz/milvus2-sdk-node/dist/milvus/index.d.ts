import { Client } from "@grpc/grpc-js";
import { Collection } from "./Collection";
import { Partition } from "./Partition";
import { Index } from "./MilvusIndex";
import { Data } from "./Data";
import { ErrorCode } from "./types/Response";
export declare class MilvusClient {
    client: Client;
    collectionManager: Collection;
    partitionManager: Partition;
    indexManager: Index;
    dataManager: Data;
    /**
     * Connect to milvus grpc client.
     * CollectionManager: control collection crud api
     * PartitionManager: control partition crud api
     * IndexManager: control index crud api
     * DataManager: Search | Query | Insert | Flush
     * @param address milvus address like: 127.0.0.1:19530
     */
    constructor(address: string);
    static get sdkInfo(): {
        version: string;
        recommandMilvus: string;
    };
    /**
     * @ignore
     * Everytime build sdk will rewrite sdk.json depend on version, milvusVersion fields in package.json.
     * @returns
     */
    checkVersion(): Promise<{
        error_code: ErrorCode;
        match: boolean;
    }>;
    closeConnection(): import("@grpc/grpc-js").connectivityState;
}
